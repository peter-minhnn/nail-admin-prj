/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GuestRouteImport } from './routes/_guest/route'
import { Route as GuestIndexImport } from './routes/_guest/index'
import { Route as AuthenticatedAdminRouteImport } from './routes/_authenticated/admin/route'
import { Route as GuestPageIdIndexImport } from './routes/_guest/$pageId/index'
import { Route as AuthenticatedAdminIndexImport } from './routes/_authenticated/admin/index'
import { Route as AdminauthSignInImport } from './routes/admin/(auth)/sign-in'
import { Route as Adminauth500Import } from './routes/admin/(auth)/500'
import { Route as GuestPageIdIdIndexImport } from './routes/_guest/$pageId/$id/index'

// Create Virtual Routes

const Adminerrors503LazyImport = createFileRoute('/admin/(errors)/503')()
const Adminerrors500LazyImport = createFileRoute('/admin/(errors)/500')()
const Adminerrors404LazyImport = createFileRoute('/admin/(errors)/404')()
const Adminerrors403LazyImport = createFileRoute('/admin/(errors)/403')()
const Adminerrors401LazyImport = createFileRoute('/admin/(errors)/401')()
const AuthenticatedAdminProductsIndexLazyImport = createFileRoute(
  '/_authenticated/admin/products/',
)()
const AuthenticatedAdminPostsIndexLazyImport = createFileRoute(
  '/_authenticated/admin/posts/',
)()
const AuthenticatedAdminContactsIndexLazyImport = createFileRoute(
  '/_authenticated/admin/contacts/',
)()
const AuthenticatedAdminBannersIndexLazyImport = createFileRoute(
  '/_authenticated/admin/banners/',
)()
const AuthenticatedAdminAlbumsIndexLazyImport = createFileRoute(
  '/_authenticated/admin/albums/',
)()

// Create/Update Routes

const GuestRouteRoute = GuestRouteImport.update({
  id: '/_guest',
  getParentRoute: () => rootRoute,
} as any)

const GuestIndexRoute = GuestIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GuestRouteRoute,
} as any)

const AuthenticatedAdminRouteRoute = AuthenticatedAdminRouteImport.update({
  id: '/_authenticated/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const GuestPageIdIndexRoute = GuestPageIdIndexImport.update({
  id: '/$pageId/',
  path: '/$pageId/',
  getParentRoute: () => GuestRouteRoute,
} as any)

const AuthenticatedAdminIndexRoute = AuthenticatedAdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedAdminRouteRoute,
} as any)

const Adminerrors503LazyRoute = Adminerrors503LazyImport.update({
  id: '/admin/(errors)/503',
  path: '/admin/503',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/admin/(errors)/503.lazy').then((d) => d.Route),
)

const Adminerrors500LazyRoute = Adminerrors500LazyImport.update({
  id: '/admin/(errors)/500',
  path: '/admin/500',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/admin/(errors)/500.lazy').then((d) => d.Route),
)

const Adminerrors404LazyRoute = Adminerrors404LazyImport.update({
  id: '/admin/(errors)/404',
  path: '/admin/404',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/admin/(errors)/404.lazy').then((d) => d.Route),
)

const Adminerrors403LazyRoute = Adminerrors403LazyImport.update({
  id: '/admin/(errors)/403',
  path: '/admin/403',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/admin/(errors)/403.lazy').then((d) => d.Route),
)

const Adminerrors401LazyRoute = Adminerrors401LazyImport.update({
  id: '/admin/(errors)/401',
  path: '/admin/401',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/admin/(errors)/401.lazy').then((d) => d.Route),
)

const AdminauthSignInRoute = AdminauthSignInImport.update({
  id: '/admin/(auth)/sign-in',
  path: '/admin/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const Adminauth500Route = Adminauth500Import.update({
  id: '/admin/(auth)/500',
  path: '/admin/500',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedAdminProductsIndexLazyRoute =
  AuthenticatedAdminProductsIndexLazyImport.update({
    id: '/products/',
    path: '/products/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/admin/products/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedAdminPostsIndexLazyRoute =
  AuthenticatedAdminPostsIndexLazyImport.update({
    id: '/posts/',
    path: '/posts/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/admin/posts/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedAdminContactsIndexLazyRoute =
  AuthenticatedAdminContactsIndexLazyImport.update({
    id: '/contacts/',
    path: '/contacts/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/admin/contacts/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedAdminBannersIndexLazyRoute =
  AuthenticatedAdminBannersIndexLazyImport.update({
    id: '/banners/',
    path: '/banners/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/admin/banners/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedAdminAlbumsIndexLazyRoute =
  AuthenticatedAdminAlbumsIndexLazyImport.update({
    id: '/albums/',
    path: '/albums/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/admin/albums/index.lazy').then(
      (d) => d.Route,
    ),
  )

const GuestPageIdIdIndexRoute = GuestPageIdIdIndexImport.update({
  id: '/$pageId/$id/',
  path: '/$pageId/$id/',
  getParentRoute: () => GuestRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/admin': {
      id: '/_authenticated/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/_guest/': {
      id: '/_guest/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof GuestIndexImport
      parentRoute: typeof GuestRouteImport
    }
    '/admin/(auth)/500': {
      id: '/admin/(auth)/500'
      path: '/admin/500'
      fullPath: '/admin/500'
      preLoaderRoute: typeof Adminauth500Import
      parentRoute: typeof rootRoute
    }
    '/admin/(auth)/sign-in': {
      id: '/admin/(auth)/sign-in'
      path: '/admin/sign-in'
      fullPath: '/admin/sign-in'
      preLoaderRoute: typeof AdminauthSignInImport
      parentRoute: typeof rootRoute
    }
    '/admin/(errors)/401': {
      id: '/admin/(errors)/401'
      path: '/admin/401'
      fullPath: '/admin/401'
      preLoaderRoute: typeof Adminerrors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/(errors)/403': {
      id: '/admin/(errors)/403'
      path: '/admin/403'
      fullPath: '/admin/403'
      preLoaderRoute: typeof Adminerrors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/(errors)/404': {
      id: '/admin/(errors)/404'
      path: '/admin/404'
      fullPath: '/admin/404'
      preLoaderRoute: typeof Adminerrors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/(errors)/500': {
      id: '/admin/(errors)/500'
      path: '/admin/500'
      fullPath: '/admin/500'
      preLoaderRoute: typeof Adminerrors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/(errors)/503': {
      id: '/admin/(errors)/503'
      path: '/admin/503'
      fullPath: '/admin/503'
      preLoaderRoute: typeof Adminerrors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/admin/': {
      id: '/_authenticated/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AuthenticatedAdminIndexImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_guest/$pageId/': {
      id: '/_guest/$pageId/'
      path: '/$pageId'
      fullPath: '/$pageId'
      preLoaderRoute: typeof GuestPageIdIndexImport
      parentRoute: typeof GuestRouteImport
    }
    '/_guest/$pageId/$id/': {
      id: '/_guest/$pageId/$id/'
      path: '/$pageId/$id'
      fullPath: '/$pageId/$id'
      preLoaderRoute: typeof GuestPageIdIdIndexImport
      parentRoute: typeof GuestRouteImport
    }
    '/_authenticated/admin/albums/': {
      id: '/_authenticated/admin/albums/'
      path: '/albums'
      fullPath: '/admin/albums'
      preLoaderRoute: typeof AuthenticatedAdminAlbumsIndexLazyImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/banners/': {
      id: '/_authenticated/admin/banners/'
      path: '/banners'
      fullPath: '/admin/banners'
      preLoaderRoute: typeof AuthenticatedAdminBannersIndexLazyImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/contacts/': {
      id: '/_authenticated/admin/contacts/'
      path: '/contacts'
      fullPath: '/admin/contacts'
      preLoaderRoute: typeof AuthenticatedAdminContactsIndexLazyImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/posts/': {
      id: '/_authenticated/admin/posts/'
      path: '/posts'
      fullPath: '/admin/posts'
      preLoaderRoute: typeof AuthenticatedAdminPostsIndexLazyImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/products/': {
      id: '/_authenticated/admin/products/'
      path: '/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AuthenticatedAdminProductsIndexLazyImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
  }
}

// Create and export the route tree

interface GuestRouteRouteChildren {
  GuestIndexRoute: typeof GuestIndexRoute
  GuestPageIdIndexRoute: typeof GuestPageIdIndexRoute
  GuestPageIdIdIndexRoute: typeof GuestPageIdIdIndexRoute
}

const GuestRouteRouteChildren: GuestRouteRouteChildren = {
  GuestIndexRoute: GuestIndexRoute,
  GuestPageIdIndexRoute: GuestPageIdIndexRoute,
  GuestPageIdIdIndexRoute: GuestPageIdIdIndexRoute,
}

const GuestRouteRouteWithChildren = GuestRouteRoute._addFileChildren(
  GuestRouteRouteChildren,
)

interface AuthenticatedAdminRouteRouteChildren {
  AuthenticatedAdminIndexRoute: typeof AuthenticatedAdminIndexRoute
  AuthenticatedAdminAlbumsIndexLazyRoute: typeof AuthenticatedAdminAlbumsIndexLazyRoute
  AuthenticatedAdminBannersIndexLazyRoute: typeof AuthenticatedAdminBannersIndexLazyRoute
  AuthenticatedAdminContactsIndexLazyRoute: typeof AuthenticatedAdminContactsIndexLazyRoute
  AuthenticatedAdminPostsIndexLazyRoute: typeof AuthenticatedAdminPostsIndexLazyRoute
  AuthenticatedAdminProductsIndexLazyRoute: typeof AuthenticatedAdminProductsIndexLazyRoute
}

const AuthenticatedAdminRouteRouteChildren: AuthenticatedAdminRouteRouteChildren =
  {
    AuthenticatedAdminIndexRoute: AuthenticatedAdminIndexRoute,
    AuthenticatedAdminAlbumsIndexLazyRoute:
      AuthenticatedAdminAlbumsIndexLazyRoute,
    AuthenticatedAdminBannersIndexLazyRoute:
      AuthenticatedAdminBannersIndexLazyRoute,
    AuthenticatedAdminContactsIndexLazyRoute:
      AuthenticatedAdminContactsIndexLazyRoute,
    AuthenticatedAdminPostsIndexLazyRoute:
      AuthenticatedAdminPostsIndexLazyRoute,
    AuthenticatedAdminProductsIndexLazyRoute:
      AuthenticatedAdminProductsIndexLazyRoute,
  }

const AuthenticatedAdminRouteRouteWithChildren =
  AuthenticatedAdminRouteRoute._addFileChildren(
    AuthenticatedAdminRouteRouteChildren,
  )

export interface FileRoutesByFullPath {
  '': typeof GuestRouteRouteWithChildren
  '/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/': typeof GuestIndexRoute
  '/admin/500': typeof Adminerrors500LazyRoute
  '/admin/sign-in': typeof AdminauthSignInRoute
  '/admin/401': typeof Adminerrors401LazyRoute
  '/admin/403': typeof Adminerrors403LazyRoute
  '/admin/404': typeof Adminerrors404LazyRoute
  '/admin/503': typeof Adminerrors503LazyRoute
  '/admin/': typeof AuthenticatedAdminIndexRoute
  '/$pageId': typeof GuestPageIdIndexRoute
  '/$pageId/$id': typeof GuestPageIdIdIndexRoute
  '/admin/albums': typeof AuthenticatedAdminAlbumsIndexLazyRoute
  '/admin/banners': typeof AuthenticatedAdminBannersIndexLazyRoute
  '/admin/contacts': typeof AuthenticatedAdminContactsIndexLazyRoute
  '/admin/posts': typeof AuthenticatedAdminPostsIndexLazyRoute
  '/admin/products': typeof AuthenticatedAdminProductsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof GuestIndexRoute
  '/admin/500': typeof Adminerrors500LazyRoute
  '/admin/sign-in': typeof AdminauthSignInRoute
  '/admin/401': typeof Adminerrors401LazyRoute
  '/admin/403': typeof Adminerrors403LazyRoute
  '/admin/404': typeof Adminerrors404LazyRoute
  '/admin/503': typeof Adminerrors503LazyRoute
  '/admin': typeof AuthenticatedAdminIndexRoute
  '/$pageId': typeof GuestPageIdIndexRoute
  '/$pageId/$id': typeof GuestPageIdIdIndexRoute
  '/admin/albums': typeof AuthenticatedAdminAlbumsIndexLazyRoute
  '/admin/banners': typeof AuthenticatedAdminBannersIndexLazyRoute
  '/admin/contacts': typeof AuthenticatedAdminContactsIndexLazyRoute
  '/admin/posts': typeof AuthenticatedAdminPostsIndexLazyRoute
  '/admin/products': typeof AuthenticatedAdminProductsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_guest': typeof GuestRouteRouteWithChildren
  '/_authenticated/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/_guest/': typeof GuestIndexRoute
  '/admin/(auth)/500': typeof Adminauth500Route
  '/admin/(auth)/sign-in': typeof AdminauthSignInRoute
  '/admin/(errors)/401': typeof Adminerrors401LazyRoute
  '/admin/(errors)/403': typeof Adminerrors403LazyRoute
  '/admin/(errors)/404': typeof Adminerrors404LazyRoute
  '/admin/(errors)/500': typeof Adminerrors500LazyRoute
  '/admin/(errors)/503': typeof Adminerrors503LazyRoute
  '/_authenticated/admin/': typeof AuthenticatedAdminIndexRoute
  '/_guest/$pageId/': typeof GuestPageIdIndexRoute
  '/_guest/$pageId/$id/': typeof GuestPageIdIdIndexRoute
  '/_authenticated/admin/albums/': typeof AuthenticatedAdminAlbumsIndexLazyRoute
  '/_authenticated/admin/banners/': typeof AuthenticatedAdminBannersIndexLazyRoute
  '/_authenticated/admin/contacts/': typeof AuthenticatedAdminContactsIndexLazyRoute
  '/_authenticated/admin/posts/': typeof AuthenticatedAdminPostsIndexLazyRoute
  '/_authenticated/admin/products/': typeof AuthenticatedAdminProductsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/admin'
    | '/'
    | '/admin/500'
    | '/admin/sign-in'
    | '/admin/401'
    | '/admin/403'
    | '/admin/404'
    | '/admin/503'
    | '/admin/'
    | '/$pageId'
    | '/$pageId/$id'
    | '/admin/albums'
    | '/admin/banners'
    | '/admin/contacts'
    | '/admin/posts'
    | '/admin/products'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin/500'
    | '/admin/sign-in'
    | '/admin/401'
    | '/admin/403'
    | '/admin/404'
    | '/admin/503'
    | '/admin'
    | '/$pageId'
    | '/$pageId/$id'
    | '/admin/albums'
    | '/admin/banners'
    | '/admin/contacts'
    | '/admin/posts'
    | '/admin/products'
  id:
    | '__root__'
    | '/_guest'
    | '/_authenticated/admin'
    | '/_guest/'
    | '/admin/(auth)/500'
    | '/admin/(auth)/sign-in'
    | '/admin/(errors)/401'
    | '/admin/(errors)/403'
    | '/admin/(errors)/404'
    | '/admin/(errors)/500'
    | '/admin/(errors)/503'
    | '/_authenticated/admin/'
    | '/_guest/$pageId/'
    | '/_guest/$pageId/$id/'
    | '/_authenticated/admin/albums/'
    | '/_authenticated/admin/banners/'
    | '/_authenticated/admin/contacts/'
    | '/_authenticated/admin/posts/'
    | '/_authenticated/admin/products/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  GuestRouteRoute: typeof GuestRouteRouteWithChildren
  AuthenticatedAdminRouteRoute: typeof AuthenticatedAdminRouteRouteWithChildren
  Adminauth500Route: typeof Adminauth500Route
  AdminauthSignInRoute: typeof AdminauthSignInRoute
  Adminerrors401LazyRoute: typeof Adminerrors401LazyRoute
  Adminerrors403LazyRoute: typeof Adminerrors403LazyRoute
  Adminerrors404LazyRoute: typeof Adminerrors404LazyRoute
  Adminerrors500LazyRoute: typeof Adminerrors500LazyRoute
  Adminerrors503LazyRoute: typeof Adminerrors503LazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  GuestRouteRoute: GuestRouteRouteWithChildren,
  AuthenticatedAdminRouteRoute: AuthenticatedAdminRouteRouteWithChildren,
  Adminauth500Route: Adminauth500Route,
  AdminauthSignInRoute: AdminauthSignInRoute,
  Adminerrors401LazyRoute: Adminerrors401LazyRoute,
  Adminerrors403LazyRoute: Adminerrors403LazyRoute,
  Adminerrors404LazyRoute: Adminerrors404LazyRoute,
  Adminerrors500LazyRoute: Adminerrors500LazyRoute,
  Adminerrors503LazyRoute: Adminerrors503LazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_guest",
        "/_authenticated/admin",
        "/admin/(auth)/500",
        "/admin/(auth)/sign-in",
        "/admin/(errors)/401",
        "/admin/(errors)/403",
        "/admin/(errors)/404",
        "/admin/(errors)/500",
        "/admin/(errors)/503"
      ]
    },
    "/_guest": {
      "filePath": "_guest/route.tsx",
      "children": [
        "/_guest/",
        "/_guest/$pageId/",
        "/_guest/$pageId/$id/"
      ]
    },
    "/_authenticated/admin": {
      "filePath": "_authenticated/admin/route.tsx",
      "children": [
        "/_authenticated/admin/",
        "/_authenticated/admin/albums/",
        "/_authenticated/admin/banners/",
        "/_authenticated/admin/contacts/",
        "/_authenticated/admin/posts/",
        "/_authenticated/admin/products/"
      ]
    },
    "/_guest/": {
      "filePath": "_guest/index.tsx",
      "parent": "/_guest"
    },
    "/admin/(auth)/500": {
      "filePath": "admin/(auth)/500.tsx"
    },
    "/admin/(auth)/sign-in": {
      "filePath": "admin/(auth)/sign-in.tsx"
    },
    "/admin/(errors)/401": {
      "filePath": "admin/(errors)/401.lazy.tsx"
    },
    "/admin/(errors)/403": {
      "filePath": "admin/(errors)/403.lazy.tsx"
    },
    "/admin/(errors)/404": {
      "filePath": "admin/(errors)/404.lazy.tsx"
    },
    "/admin/(errors)/500": {
      "filePath": "admin/(errors)/500.lazy.tsx"
    },
    "/admin/(errors)/503": {
      "filePath": "admin/(errors)/503.lazy.tsx"
    },
    "/_authenticated/admin/": {
      "filePath": "_authenticated/admin/index.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_guest/$pageId/": {
      "filePath": "_guest/$pageId/index.tsx",
      "parent": "/_guest"
    },
    "/_guest/$pageId/$id/": {
      "filePath": "_guest/$pageId/$id/index.tsx",
      "parent": "/_guest"
    },
    "/_authenticated/admin/albums/": {
      "filePath": "_authenticated/admin/albums/index.lazy.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/banners/": {
      "filePath": "_authenticated/admin/banners/index.lazy.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/contacts/": {
      "filePath": "_authenticated/admin/contacts/index.lazy.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/posts/": {
      "filePath": "_authenticated/admin/posts/index.lazy.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/products/": {
      "filePath": "_authenticated/admin/products/index.lazy.tsx",
      "parent": "/_authenticated/admin"
    }
  }
}
ROUTE_MANIFEST_END */
